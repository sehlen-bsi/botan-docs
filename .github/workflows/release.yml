name: Release

on:
  - workflow_dispatch
  # TODO: Temporary, should be removed before merged to main
  - push

permissions:
  contents: read
  # implicitly all other scopes not listed become none

env:
  BOTAN_REPO: randombit/botan
  BOTAN_REF: 3.1.1

jobs:
  utility:
    name: "Utility"
    strategy:
      fail-fast: false

      matrix:
        include:
          - jobname: Documentation
            target: pdf_docs
            artifacts: |
              build/docs/handbook/botan.pdf
              build/docs/doxygen/
            host_os: ubuntu-latest
          - jobname: Coverage Report
            target: coverage
            artifacts: lcov-out/
            host_os: ubuntu-latest

    runs-on: ${{ matrix.host_os }}
    steps:
      - name: Fetch Botan Repository
        uses: actions/checkout@v3
        with:
          path: ./botan
          repository: ${{ env.BOTAN_REPO }}
          fetch-depth: 0
          ref: ${{ env.BOTAN_REF }}

      - name: Setup Build Agent
        uses: ./botan/.github/actions/setup-build-agent
        with:
          target: ${{ matrix.target }}
          cache-key: bsi-${{ matrix.host_os }}-${{ matrix.target }}

      - name: Build and Test Botan
        run: python3 ./botan/src/scripts/ci_build.py --with-bsi-policy ${{ matrix.target }}

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.jobname }}
          path: ./botan/${{ matrix.artifacts }}
        if: ${{ matrix.artifacts != '' }}

  bsi_tests:
    name: "BSI Build Policy Tests"
    strategy:
      fail-fast: false

      matrix:
        # basic configuration combinations should run on all target platforms
        target:    [ static, shared ]
        platform:  [
          { host_os: windows-2022,  compiler: msvc,  make_tool: jom },
          { host_os: windows-2019,  compiler: msvc,  make_tool: jom },
          { host_os: ubuntu-latest, compiler: gcc,   make_tool: make },
          { host_os: ubuntu-latest, compiler: clang, make_tool: make },
          { host_os: macos-latest,  compiler: clang, make_tool: make }
        ]

    runs-on: ${{ matrix.platform.host_os }}

    steps:
      - name: Fetch Botan Repository
        uses: actions/checkout@v3
        with:
          path: ./botan
          repository: ${{ env.BOTAN_REPO }}
          fetch-depth: 0
          ref: ${{ env.BOTAN_REF }}

      - name: Setup Build Agent
        uses: ./botan/.github/actions/setup-build-agent
        with:
          target: ${{ matrix.target }}
          cache-key: bsi-${{ matrix.platform.host_os }}-${{ matrix.platform.compiler }}-${{ matrix.target }}

      - name: Build and Test Botan
        run: python3 ./botan/src/scripts/ci_build.py --with-bsi-policy --cc='${{ matrix.platform.compiler }}' --make-tool='${{ matrix.platform.make_tool }}' ${{ matrix.target }}
