PKCS#11
=======

PKCS#11 functions are tested using a set of system tests for Modules,
Slots, Sessions and Objects and system tests for RSA key generation,
encryption and signature, ECDSA key generation and signature, ECDH key
generation and key derivation, random generator generate and reseeding
and X.509 certificate import. Last but not least, the token management
functions to initialize a token and setting/changing the user PIN and
Security Officer (SO) PIN are tested. All the tests are implemented in
:srcref:`src/tests/test_pkcs11_high_level.cpp`.

PKCS#11 functions are not executed during a regular run of the test
suite, but instead must be executed manually:

*./botan-test --pkcs11-lib=<PATH_TO_PKCS11_MODULE> pkcs11*

This is because the test suite needs a vendor-specific PKCS#11 module
to communicate with the HSM under test.

The token under test must have the User PIN set to 123456 and the SO PIN
set to 12345678 prior to running the tests.

Module Tests
------------

Module tests check that PKCS#11 modules can be loaded and unloaded
successfully.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MODULE-1                                                            |
   +=====================+============================================================================+
   | **Type:**           | Negative Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Load a PKCS#11 module from a non-existing path                             |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = “/a/b/c”                                                     |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | An exception is thrown                                                     |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from a non-existing path “/a/b/c”                         |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MODULE-2                                                            |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Load a PKCS#11 module from a valid path                                    |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib* path                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | The module is loaded                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MODULE-3                                                            |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Reload a PKCS#11 module                                                    |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | The module is loaded                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Reload the Module from *Module Path*                                    |
   |                     |                                                                            |
   |                     | #. Retrieve Module information                                             |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MODULE-4                                                            |
   +=====================+============================================================================+
   | **Type:**           | Negative Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Attempt to load the same module twice                                      |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | An error occurs                                                            |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Load another Module from the same *Module Path*                         |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MODULE-5                                                            |
   +=====================+============================================================================+
   | **Type:**           | Negative Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Attempt to load the same module twice                                      |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | An error occurs                                                            |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Load a second Module from the same *Module Path*                        |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MODULE-6                                                            |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Retrieve Module information                                                |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Retrieve Module information and check that the Cryptoki major version   |
   |                     |    is not 0                                                                |
   +---------------------+----------------------------------------------------------------------------+

Slot Tests
----------

Slot tests check whether slots can successfully be enumerated and slot
information can be retrieved.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-1                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Detect available slots                                                     |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token and check that the number is |
   |                     |    1 or higher                                                             |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-2                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Load a specific slot                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token and check that the number is |
   |                     |    1 or higher                                                             |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Check that the Slot ID equals the slot id in the list from step 2       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-3                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Retrieve slot info                                                         |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Retrieve SlotInfo from Slot                                             |
   |                     |                                                                            |
   |                     | #. Check that SlotInfo description field is not the empty string           |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-4                                                              |
   +=====================+============================================================================+
   | **Type:**           | Negative Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Test with invalid slot id                                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | An exception is thrown                                                     |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with and without a connected token                  |
   |                     |                                                                            |
   |                     | #. Select a slot id that is not present in the available slots list        |
   |                     |                                                                            |
   |                     | #. Load this Slot from the slot id                                         |
   |                     |                                                                            |
   |                     | #. Retrieve slot info from this Slot                                       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-5                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Retrieve token info                                                        |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Retrieve TokenInfo from Slot                                            |
   |                     |                                                                            |
   |                     | #. Check that TokenInfo label field is not the empty string                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-6                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Retrieve mechanism list                                                    |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Retrieve mechanism list from Slot and check that it contains at least   |
   |                     |    one element                                                             |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SLOT-7                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Retrieve mechanism info                                                    |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Retrieve mechanism info for the RsaPkcsKeyPairGen mechanism from Slot   |
   +---------------------+----------------------------------------------------------------------------+

Session Tests
-------------

Session tests check whether sessions can be successfully established
with a token.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-1                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Open a read-only session                                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-only Session using the Slot                                 |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-2                                                           |
   +=====================+============================================================================+
   | **Type:**           | Negative Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Open a read-only session using an invalid slot id                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | None                                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | An exception is thrown                                                     |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with and without a connected token                  |
   |                     |                                                                            |
   |                     | #. Select a slot id that is not present in the available slots list        |
   |                     |                                                                            |
   |                     | #. Load this Slot from the slot id                                         |
   |                     |                                                                            |
   |                     | #. Open a read-only Session using the Slot                                 |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-3                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Open a read-write session                                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-write Session using the Slot                                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-4                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Open a read-write session using dedicated CK_FLAGS                         |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | CK_FLAGS = SerialSession \| RwSession                                      |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-write Session using the Slot with *CK_FLAGS*                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-5                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Open two sessions in parallel                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-only Session using the Slot                                 |
   |                     |                                                                            |
   |                     | #. Open a read-write Session using the same Slot                           |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-6                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Reuse the session handle in a second session                               |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-write Session using the Slot                                |
   |                     |                                                                            |
   |                     | #. Get the Session handle and invalidate the Session object                |
   |                     |                                                                            |
   |                     | #. Create a new Session object and reuse the Session Handle                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-7                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Log into a session with the User PIN                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-write Session using the Slot                                |
   |                     |                                                                            |
   |                     | #. Log into the Session with the User PIN                                  |
   |                     |                                                                            |
   |                     | #. Log off from the Session                                                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-SESSION-8                                                           |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Log into a session with the SO PIN                                         |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Open a read-write Session using the Slot                                |
   |                     |                                                                            |
   |                     | #. Log into the Session with the SO PIN                                    |
   +---------------------+----------------------------------------------------------------------------+

RSA Tests
---------

RSA tests involve key import and export, key generation, signature and
verification and encryption and decryption.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-1                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Import an RSA private key into the token                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random 2048 bits RSA keypair                                 |
   |                     |                                                                            |
   |                     | #. Set the RSA key to be a token key, to be a private token object, a      |
   |                     |    decryption key and a signature key                                      |
   |                     |                                                                            |
   |                     | #. Import the RSA key into the token using the read-write session          |
   |                     |                                                                            |
   |                     | #. Destroy the RSA key in the token                                        |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-2                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Export an RSA private key from a token                                     |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random 2048 bits RSA keypair                                 |
   |                     |                                                                            |
   |                     | #. Set the RSA key to be a token key, to be a private token object, a      |
   |                     |    decryption key and a signature key, set it to be extractable and not    |
   |                     |    sensitive                                                               |
   |                     |                                                                            |
   |                     | #. Import the RSA private key into the token using the read-write session  |
   |                     |                                                                            |
   |                     | #. Export the key from the token and compare it with the generated private |
   |                     |    key                                                                     |
   |                     |                                                                            |
   |                     | #. Destroy the RSA key in the token                                        |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-3                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Import an RSA public key into the token                                    |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random 2048 bits RSA keypair                                 |
   |                     |                                                                            |
   |                     | #. Set the RSA key to be a token key, to not be a private token object and |
   |                     |    to be a decryption key                                                  |
   |                     |                                                                            |
   |                     | #. Import the RSA public key into the token using the read-write session   |
   |                     |                                                                            |
   |                     | #. Destroy the RSA public key in the token                                 |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-4                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Generate an RSA private key in the token                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate an RSA keypair in the token with the following properties:     |
   |                     |                                                                            |
   |                     |    -  length = 2048 bits                                                   |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  signature key = true                                                 |
   |                     |                                                                            |
   |                     |    -  decryption key = true                                                |
   |                     |                                                                            |
   |                     | 2. Destroy the RSA private key in the token                                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-5                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Generate an RSA keypair in the token                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate an RSA keypair in the token with the following properties:     |
   |                     |                                                                            |
   |                     |    -  length = 2048 bits                                                   |
   |                     |                                                                            |
   |                     |    -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                          |
   |                     |                                                                            |
   |                     |    -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                        |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  public verification key = true                                       |
   |                     |                                                                            |
   |                     |    -  public key private object = false                                    |
   |                     |                                                                            |
   |                     |    -  private key private object = true                                    |
   |                     |                                                                            |
   |                     |    -  private signature key = true                                         |
   |                     |                                                                            |
   |                     |    -  private decryption key = true                                        |
   |                     |                                                                            |
   |                     | 2. Destroy the RSA public key in the token                                 |
   |                     |                                                                            |
   |                     | 3. Destroy the RSA private key in the token                                |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-6                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Encrypt and decrypt in the token with no padding                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  signature key = true                                                    |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Plaintext = 0x000102030405060708090A0B… (2048 bits)                        |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Encrypt *Plaintext* using the RSA public key in the token               |
   |                     |                                                                            |
   |                     | #. Decrypt the resulting ciphertext and compare the output with the input  |
   |                     |    value *Plaintext*                                                       |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-7                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Encrypt and decrypt in the token with PKCS#1 v1.5 padding                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  signature key = true                                                    |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Plaintext = 0x000102030400 (48 bits)                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Encrypt *Plaintext* using the RSA public key in the token               |
   |                     |                                                                            |
   |                     | #. Decrypt the resulting ciphertext and compare the output with the input  |
   |                     |    value *Plaintext*                                                       |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-8                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Encrypt and decrypt in the token with OAEP padding (SHA-1)                 |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  signature key = true                                                    |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Plaintext = 0x000102030400 (48 bits)                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Encrypt *Plaintext* using the RSA public key in the token               |
   |                     |                                                                            |
   |                     | #. Decrypt the resulting ciphertext and compare the output with the input  |
   |                     |    value *Plaintext*                                                       |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-9                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Sign and verify a message in the token with no padding                     |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Message = 0x000102030405060708090A0B… (2048 bits)                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Sign the *Message* using the RSA private key in the token               |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature                                          |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-10                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Sign and verify a single-part message in the token with PKCS#1 v1.5        |
   |                     | padding (SHA-256)                                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Message = 0x000102030405060708090A0B… (2048 bits)                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Sign the *Message* using the RSA private key in the token               |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature                                          |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-11                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Sign and verify a single-part message in the token with PKCS#1 PSS padding |
   |                     | (SHA-256)                                                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Message = 0x000102030405060708090A0B… (2048 bits)                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Sign the *Message* using the RSA private key in the token               |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature                                          |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-12                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Sign and verify a multi-part message in the token with PKCS#1 v1.5 padding |
   |                     | (SHA-256)                                                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Message = 0x000102030405060708090A0B… (2048 bits)                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Input the first 1024 bits of *Message* into the token signature         |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Input the second 1024 bits of *Message* into the token signature        |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Sign using the RSA private key in the token                             |
   |                     |                                                                            |
   |                     | #. Input the first 1024 bits of *Message* into the token verification      |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Input the second 1024 bits of *Message* into the token verification     |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature                                          |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RSA-13                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Sign and verify a multi-part message in the token with PKCS#1 PSS padding  |
   |                     | (SHA-256)                                                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An RSA keypair was generated with the following properties:                |
   |                     |                                                                            |
   |                     | -  length = 2048 bits                                                      |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_RSA_PUB_KEY”                             |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_RSA_PRIV_KEY”                           |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   |                     |                                                                            |
   |                     | -  private decryption key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Message = 0x000102030405060708090A0B… (2048 bits)                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Input the first 1024 bits of *Message* into the token signature         |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Input the second 1024 bits of *Message* into the token signature        |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Sign using the RSA private key in the token                             |
   |                     |                                                                            |
   |                     | #. Input the first 1024 bits of *Message* into the token verification      |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Input the second 1024 bits of *Message* into the token verification     |
   |                     |    function                                                                |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature                                          |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

ECDSA Tests
-----------

ECDSA tests involve key import and export, key generation, and signature
and verification.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-1                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Import an ECDSA private key into the token                                 |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDSA private key on the secp256r1 curve              |
   |                     |                                                                            |
   |                     | #. Import the ECDSA key into the token using the read-write session and    |
   |                     |    with the following properties:                                          |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  signature key = true                                                 |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdsa key”                                       |
   |                     |                                                                            |
   |                     | 3. Destroy the ECDSA key in the token                                      |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-2                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Export an ECDSA private key from a token                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDSA private key on the secp256r1 curve              |
   |                     |                                                                            |
   |                     | #. Import the ECDSA key into the token using the read-write session and    |
   |                     |    with the following properties:                                          |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  signature key = true                                                 |
   |                     |                                                                            |
   |                     |    -  extractable = true                                                   |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdsa key”                                       |
   |                     |                                                                            |
   |                     | 3. Export the key from the token                                           |
   |                     |                                                                            |
   |                     | 4. Destroy the ECDSA key in the token                                      |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-3                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Import an ECDSA public key into the token                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDSA private key on the secp256r1 curve              |
   |                     |                                                                            |
   |                     | #. Import the ECDSA public key into the token using the read-write session |
   |                     |    and with the following properties:                                      |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  verification key = true                                              |
   |                     |                                                                            |
   |                     |    -  private object = false                                               |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdsa pub key”                                   |
   |                     |                                                                            |
   |                     | 3. Destroy the ECDSA key in the token                                      |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-4                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Export an ECDSA public key from the token                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDSA private key on the secp256r1 curve              |
   |                     |                                                                            |
   |                     | #. Import the ECDSA public key into the token using the read-write session |
   |                     |    and with the following properties:                                      |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  verification key = true                                              |
   |                     |                                                                            |
   |                     |    -  private object = false                                               |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdsa pub key”                                   |
   |                     |                                                                            |
   |                     | 3. Export the public key and compare it with the generated public key      |
   |                     |                                                                            |
   |                     | 4. Destroy the ECDSA key in the token                                      |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-5                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Generate an ECDSA private key in the token                                 |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Curve = secp256r1, brainpool512r1                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate an ECDSA private key in the token with the following           |
   |                     |    properties:                                                             |
   |                     |                                                                            |
   |                     |    -  curve = *Curve*                                                      |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  signature key = true                                                 |
   |                     |                                                                            |
   |                     | 2. Destroy the ECDSA private key in the token                              |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-6                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Generate an ECDSA keypair in the token                                     |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate an ECDSA keypair in the token with the following properties:   |
   |                     |                                                                            |
   |                     |    -  curve = secp256r1                                                    |
   |                     |                                                                            |
   |                     |    -  public key label = “BOTAN_TEST_ECDSA_PUB_KEY”                        |
   |                     |                                                                            |
   |                     |    -  private key label = “BOTAN_TEST_ECDSA_PRIV_KEY”                      |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  public key private object = false                                    |
   |                     |                                                                            |
   |                     |    -  private key private object = true                                    |
   |                     |                                                                            |
   |                     |    -  public key modifiable = true                                         |
   |                     |                                                                            |
   |                     |    -  private key modifiable = true                                        |
   |                     |                                                                            |
   |                     |    -  private key sensitive = true                                         |
   |                     |                                                                            |
   |                     |    -  private key extractable = false                                      |
   |                     |                                                                            |
   |                     |    -  public verification key = true                                       |
   |                     |                                                                            |
   |                     |    -  private signature key = true                                         |
   |                     |                                                                            |
   |                     | 2. Destroy the ECDSA public key in the token                               |
   |                     |                                                                            |
   |                     | 3. Destroy the ECDSA private key in the token                              |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDSA-7                                                             |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Sign and verify a message in the token with no padding                     |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   |                     |                                                                            |
   |                     | An ECDSA keypair was generated with the following properties:              |
   |                     |                                                                            |
   |                     | -  curve = secp256r1, brainpool512r1                                       |
   |                     |                                                                            |
   |                     | -  public key label = “BOTAN_TEST_ECDSA_PUB_KEY”                           |
   |                     |                                                                            |
   |                     | -  private key label = “BOTAN_TEST_ECDSA_PRIV_KEY”                         |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  public key modifiable = true                                            |
   |                     |                                                                            |
   |                     | -  private key modifiable = true                                           |
   |                     |                                                                            |
   |                     | -  private key sensitive = true                                            |
   |                     |                                                                            |
   |                     | -  private key extractable = false                                         |
   |                     |                                                                            |
   |                     | -  public verification key = true                                          |
   |                     |                                                                            |
   |                     | -  private signature key = true                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Message = 0x0101010101010101010101010101010101010101 (160 bits)            |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Sign the *Message* using the ECDSA private key in the token             |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature in the token                             |
   |                     |                                                                            |
   |                     | #. Verify the resulting signature using the software implementation        |
   |                     |                                                                            |
   |                     | #. Destroy the token private key                                           |
   |                     |                                                                            |
   |                     | #. Destroy the token public key                                            |
   +---------------------+----------------------------------------------------------------------------+

ECDH Tests
----------

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-1                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Import an ECDH private key into the token                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDH private key on the secp256r1 curve               |
   |                     |                                                                            |
   |                     | #. Import the ECDH key into the token using the read-write session and     |
   |                     |    with the following properties:                                          |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  derivation key = true                                                |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdh key”                                        |
   |                     |                                                                            |
   |                     | 3. Destroy the ECDH key in the token                                       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-2                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Export an ECDH private key from a token                                    |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDH private key on the secp256r1 curve               |
   |                     |                                                                            |
   |                     | #. Import the ECDH key into the token using the read-write session and     |
   |                     |    with the following properties:                                          |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  derivation key = true                                                |
   |                     |                                                                            |
   |                     |    -  extractable = true                                                   |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdh key”                                        |
   |                     |                                                                            |
   |                     | 3. Export the key from the token                                           |
   |                     |                                                                            |
   |                     | 4. Destroy the ECDH key in the token                                       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-3                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Import an ECDH public key into the token                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDH private key on the secp256r1 curve               |
   |                     |                                                                            |
   |                     | #. Import the ECDH public key into the token using the read-write session  |
   |                     |    and with the following properties:                                      |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  derivation key = true                                                |
   |                     |                                                                            |
   |                     |    -  private object = false                                               |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdh pub key”                                    |
   |                     |                                                                            |
   |                     | 3. Destroy the ECDH key in the token                                       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-4                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Export an ECDH public key from the token                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate a random ECDH private key on the secp256r1 curve               |
   |                     |                                                                            |
   |                     | #. Import the ECDH public key into the token using the read-write session  |
   |                     |    and with the following properties:                                      |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  derivation key = true                                                |
   |                     |                                                                            |
   |                     |    -  private object = false                                               |
   |                     |                                                                            |
   |                     |    -  label = “Botan test ecdh pub key”                                    |
   |                     |                                                                            |
   |                     | 3. Export the public key                                                   |
   |                     |                                                                            |
   |                     | 4. Destroy the ECDH key in the token                                       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-5                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Generate an ECDH private key in the token                                  |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate an ECDH private key in the token with the following            |
   |                     |    properties:                                                             |
   |                     |                                                                            |
   |                     |    -  curve = secp256r1                                                    |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  private object = true                                                |
   |                     |                                                                            |
   |                     |    -  derivation key = true                                                |
   |                     |                                                                            |
   |                     | 2. Destroy the ECDH private key in the token                               |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-6                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Generate an ECDH keypair in the token                                      |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Generate an ECDH keypair in the token with the following properties:    |
   |                     |                                                                            |
   |                     |    -  curve = secp256r1                                                    |
   |                     |                                                                            |
   |                     |    -  public key label = “Botan test ECDH key1_PUB_KEY”                    |
   |                     |                                                                            |
   |                     |    -  private key label = “Botan test ECDH key1_PRIV_KEY”                  |
   |                     |                                                                            |
   |                     |    -  token key = true                                                     |
   |                     |                                                                            |
   |                     |    -  public key private object = false                                    |
   |                     |                                                                            |
   |                     |    -  private key private object = true                                    |
   |                     |                                                                            |
   |                     |    -  public key modifiable = true                                         |
   |                     |                                                                            |
   |                     |    -  private key modifiable = true                                        |
   |                     |                                                                            |
   |                     |    -  private key sensitive = true                                         |
   |                     |                                                                            |
   |                     |    -  private key extractable = false                                      |
   |                     |                                                                            |
   |                     |    -  public derivation key = true                                         |
   |                     |                                                                            |
   |                     |    -  private derivation key = true                                        |
   |                     |                                                                            |
   |                     | 2. Destroy the ECDH public key in the token                                |
   |                     |                                                                            |
   |                     | 3. Destroy the ECDH private key in the token                               |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-ECDH-7                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Derive a shared secret in the token                                        |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-write session is open with the token using the User PIN             |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Two ECDH keypairs were generated in the token with the following           |
   |                     | properties:                                                                |
   |                     |                                                                            |
   |                     | -  curve = secp256r1                                                       |
   |                     |                                                                            |
   |                     | -  public key label = “Botan test ECDH key2_PUB_KEY”                       |
   |                     |                                                                            |
   |                     | -  private key label = “Botan test ECDH key2_PRIV_KEY”                     |
   |                     |                                                                            |
   |                     | -  token key = true                                                        |
   |                     |                                                                            |
   |                     | -  public key private object = false                                       |
   |                     |                                                                            |
   |                     | -  private key private object = true                                       |
   |                     |                                                                            |
   |                     | -  public key modifiable = true                                            |
   |                     |                                                                            |
   |                     | -  private key modifiable = true                                           |
   |                     |                                                                            |
   |                     | -  private key sensitive = true                                            |
   |                     |                                                                            |
   |                     | -  private key extractable = false                                         |
   |                     |                                                                            |
   |                     | -  public derivation key = true                                            |
   |                     |                                                                            |
   |                     | -  private derivation key = true                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Derive a 256 bit shared secret with the first ECDH key                  |
   |                     |                                                                            |
   |                     | #. Derive a 256 bit shared secret with the second ECDH key                 |
   |                     |                                                                            |
   |                     | #. Check that both derived shared secrets are equal                        |
   |                     |                                                                            |
   |                     | #. Destroy the first ECDH key in the token                                 |
   |                     |                                                                            |
   |                     | #. Destroy the second ECDH key in the token                                |
   +---------------------+----------------------------------------------------------------------------+

Random Generator Tests
----------------------

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RNG-1                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Request random bytes                                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-only session is open with the token using the User PIN              |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Request 20 random bytes from the token                                  |
   |                     |                                                                            |
   |                     | #. Check that not all bytes are null                                       |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RNG-2                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Add entropy                                                                |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-only session is open with the token using the User PIN              |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Create RNG and initialize it with the PKCS#11 session                   |
   |                     |                                                                            |
   |                     | #. Confirm that RNG is seeded                                              |
   |                     |                                                                            |
   |                     | #. Reset the RNG                                                           |
   |                     |                                                                            |
   |                     | #. Verify that RNG is still seeded and therefore has ignored the reset     |
   |                     |                                                                            |
   |                     | #. Test that attempt to reseed the RNG is ignored                          |
   |                     |                                                                            |
   |                     | #. Generate 20 random bytes with a software generator                      |
   |                     |                                                                            |
   |                     | #. Seed the token random generator with the 20 random bytes from step 1    |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-RNG-3                                                               |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Use PKCS#11 random generator as seed generator for HMAC_DRBG               |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-only session is open with the token using the User PIN              |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Create an instance of the HMAC_DRBG with the PKCS#11 random generator   |
   |                     |    as seed generator                                                       |
   |                     |                                                                            |
   |                     | #. Check that HMAC_DRBG is not seeded                                      |
   |                     |                                                                            |
   |                     | #. Request 2048 random bits from HMAC_DRBG                                 |
   |                     |                                                                            |
   |                     | #. Check that HMAC_DRBG is seeded                                          |
   |                     |                                                                            |
   |                     | #. Add the string "Botan PKCS#11 Tests" as additional entropy into         |
   |                     |    HMAC_DRBG                                                               |
   |                     |                                                                            |
   |                     | #. Request 2048 random bits from HMAC_DRBG                                 |
   |                     |                                                                            |
   |                     | #. Check that not all bytes are null                                       |
   +---------------------+----------------------------------------------------------------------------+

X.509 Tests
-----------

X.509 tests load an X.509 certificate into a token.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-X509-1                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Load an X.509 certificate into the token                                   |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   |                     |                                                                            |
   |                     | A read-only session is open with the token using the User PIN              |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   |                     |                                                                            |
   |                     | Certificate File = “src/tests/data/nist_x509/test01/end.crt”               |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load certificate from *Certificate File*                                |
   |                     |                                                                            |
   |                     | #. Import the certificate into the token with the following properties:    |
   |                     |                                                                            |
   |                     |    -  label = “Botan PKCS#11 test certificate”                             |
   |                     |                                                                            |
   |                     |    -  private object = false                                               |
   |                     |                                                                            |
   |                     |    -  token object = true                                                  |
   |                     |                                                                            |
   |                     | 3. Create a copy of the certificate using the object handle and compare    |
   |                     |    both certificates                                                       |
   |                     |                                                                            |
   |                     | 4. Destroy the certificate in the token                                    |
   +---------------------+----------------------------------------------------------------------------+

Token Management
----------------

Token management tests initialize a token and set and change User PIN
and SO PIN.

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MGMT-1                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Set the User PIN with the SO PIN                                           |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Set the User PIN to 654321 using the SO PIN 12345678                    |
   |                     |                                                                            |
   |                     | #. Set the User PIN to 123456 using the SO PIN 12345678                    |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MGMT-2                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Initialize a token                                                         |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Initialize the token and set the User PIN to 123456 and the the SO PIN  |
   |                     |    to 12345678                                                             |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MGMT-3                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Change User PIN with the User PIN                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Set the User PIN to 654321 using the User PIN 123456                    |
   |                     |                                                                            |
   |                     | #. Set the User PIN to 123456 using the User PIN 654321                    |
   +---------------------+----------------------------------------------------------------------------+

.. table::
   :class: longtable
   :widths: 20 80

   +---------------------+----------------------------------------------------------------------------+
   | **Test Case No.:**  | PKCS11-MGMT-4                                                              |
   +=====================+============================================================================+
   | **Type:**           | Positive Test                                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Description:**    | Change SO PIN with the SO PIN                                              |
   +---------------------+----------------------------------------------------------------------------+
   | **Preconditions:**  | At least one token must be connected                                       |
   +---------------------+----------------------------------------------------------------------------+
   | **Input Values:**   | Module Path = *--pkcs11-lib path*                                          |
   +---------------------+----------------------------------------------------------------------------+
   | **Expected          | None                                                                       |
   | Output:**           |                                                                            |
   +---------------------+----------------------------------------------------------------------------+
   | **Steps:**          | #. Load a Module from *Module Path*                                        |
   |                     |                                                                            |
   |                     | #. Get available slots with a connected token                              |
   |                     |                                                                            |
   |                     | #. Load a Slot from the first element of the available slots               |
   |                     |                                                                            |
   |                     | #. Set the SO PIN to 87654321 using the SO PIN 12345678                    |
   |                     |                                                                            |
   |                     | #. Set the SO PIN to 12345678 using the SO PIN 87654321                    |
   +---------------------+----------------------------------------------------------------------------+
